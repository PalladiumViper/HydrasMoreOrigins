#example = {
#	icons: Needs "GFX_planet_modifier_ground_support_NAME" and "GFX_fleet_order_button_ground_support_NAME" (hardcoded, no need to define here)
#
#	# root = fleet
#	trigger = {
#		always = yes
#	}
#
#	default = yes	# Is this the default stance that new fleets will use?
#
#	stop_when_armies_dead = yes	# Will this stance continue to bombard planets where all defensive armies are dead? default = no
#	abduct_pops = no	# Will this stance attempt to abduct pops to your own planets instead of killing them? default = no
#
#	planet_damage = 0.5		# General scale of damage to planet, default = 1.0
#	army_damage = 1.0		# General scale of damage to armies, default = 1.0
#
#	kill_pop_chance = {		# Chance that a pop is killed when planetary damage reaches 100%, default = 0
#		base = 0.25
#	}
#	min_pops_to_kill_pop = 8	# Will not kill/abduct pops if pops <= this number already, default = 0. Doesn't work for nations that doesn't have diplomatic wars!
#
#	# root = fleet
#	# from = planet
#	ai_weight = {
#		weight = 1
#	}
#}

HMO_zombie_bombardment = {
	trigger = {
		owner = {
			OR = {
				has_country_flag = HMO_cyber_zombie_authority
				AND = {
					owner = { is_country_type = enclave_mercenary }
					root.controller = {
						has_country_flag = HMO_cyber_zombie_authority
					}
				}
			}
			OR = {
				NOT = { is_country_type = default }
				has_policy_flag = orbital_bombardment_indiscriminate
				has_policy_flag = orbital_bombardment_armageddon
			}
		}
	}

	default = no

	stop_when_armies_dead = no
	abduct_pops = no

	planet_damage = 2.0
	army_damage = 0.5

	kill_pop_chance = {
		base = 1.25
		modifier = {
			factor = 0
			species = {
				OR = {
					has_trait = trait_machine_unit
					has_trait = trait_mechanical
					has_trait = trait_zombie
					has_trait = trait_robot_digital_1
					has_trait = trait_robot_digital_2
				}
			}
		}
	}
	min_pops_to_kill_pop = 0

	# root = fleet
	# from = planet
	ai_weight = {
		weight = 10
		modifier = {
			factor = 0.01
			exists = from
			from = {
				owner = { NOT = { is_hostile = root.owner } }
			}
			exists = owner
			owner = { is_crisis_faction = no }
		}
	}
}